version: '3'

services:
  app2:
    build:
      context: ./src/app2
      platforms:
        - linux/amd64
    ports:
      - "5001:5001"
    networks:
      - app-network
    volumes:
      - ./models/tinyllama-1b:/app/models/tinyllama-1b
      - ./offload:/app/offload
    environment:
      - HF_HOME=/app/models
      - TRANSFORMERS_OFFLINE=0
      - TOKENIZERS_PARALLELISM=false
      - MODEL_SERVER_URL=https://3529-2001-f40-90e-62cd-ace4-d62e-323f-6852.ngrok-free.app
    deploy:
      resources:
        limits:
          memory: 3g
        reservations:
          memory: 1g
    restart: on-failure:5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 180s
    dns:
      - 8.8.8.8
      - 8.8.4.4

  app1:
    build:
      context: ./src/app1
      platforms:
        - linux/amd64
    ports:
      - "5002:5002"
    networks:
      - app-network
    volumes:
      - ./models/tinyllama-1b:/app/models/tinyllama-1b
      - ./offload:/app/offload
    environment:
      - HF_HOME=/app/models
      - TRANSFORMERS_OFFLINE=0
      - TOKENIZERS_PARALLELISM=false
      - MODEL_SERVER_URL=https://3529-2001-f40-90e-62cd-ace4-d62e-323f-6852.ngrok-free.app
      - NODE2_URL=http://app2:5001
    deploy:
      resources:
        limits:
          memory: 3g
        reservations:
          memory: 1g
    restart: on-failure:5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 180s
    dns:
      - 8.8.8.8
      - 8.8.4.4

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
